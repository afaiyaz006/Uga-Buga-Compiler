
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left*/left+-rightUMINUS()AND EQ GT GTE LT LTE NAME NEQ NUMBER ORstatement : NAME "=" expressionstatement : expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expressionexpression : expression GT expression\n                  | expression LT expression\n                  | expression GTE expression\n                  | expression LTE expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression \'&\' expression\n                  | expression \'|\' expressionexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,],[2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'-':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[4,-18,9,4,4,-17,4,4,4,4,4,4,4,4,4,4,4,4,4,-15,-18,9,9,-3,-4,9,9,9,9,9,9,9,9,9,9,-16,]),'(':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'$end':([1,2,3,6,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[0,-18,-2,-17,-15,-18,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,]),'=':([2,],[7,]),'+':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,8,-17,-15,-18,8,8,-3,-4,8,8,8,8,8,8,8,8,8,8,-16,]),'*':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,10,-17,-15,-18,10,10,-3,-4,-5,-6,10,10,10,10,10,10,10,10,-16,]),'/':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,11,-17,-15,-18,11,11,-3,-4,-5,-6,11,11,11,11,11,11,11,11,-16,]),'GT':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,12,-17,-15,-18,12,12,-3,-4,-5,-6,12,12,12,12,12,12,12,12,-16,]),'LT':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,13,-17,-15,-18,13,13,-3,-4,-5,-6,13,13,13,13,13,13,13,13,-16,]),'GTE':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,14,-17,-15,-18,14,14,-3,-4,-5,-6,14,14,14,14,14,14,14,14,-16,]),'LTE':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,15,-17,-15,-18,15,15,-3,-4,-5,-6,15,15,15,15,15,15,15,15,-16,]),'EQ':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,16,-17,-15,-18,16,16,-3,-4,-5,-6,16,16,16,16,16,16,16,16,-16,]),'NEQ':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,17,-17,-15,-18,17,17,-3,-4,-5,-6,17,17,17,17,17,17,17,17,-16,]),'&':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,18,-17,-15,-18,18,18,-3,-4,-5,-6,18,18,18,18,18,18,18,18,-16,]),'|':([2,3,6,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-18,19,-17,-15,-18,19,19,-3,-4,-5,-6,19,19,19,19,19,19,19,19,-16,]),')':([6,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,],[-17,-15,-18,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,],[3,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','parse.py',18),
  ('statement -> expression','statement',1,'p_statement_expr','parse.py',25),
  ('expression -> expression + expression','expression',3,'p_expression_binop','parse.py',30),
  ('expression -> expression - expression','expression',3,'p_expression_binop','parse.py',31),
  ('expression -> expression * expression','expression',3,'p_expression_binop','parse.py',32),
  ('expression -> expression / expression','expression',3,'p_expression_binop','parse.py',33),
  ('expression -> expression GT expression','expression',3,'p_expression_relop','parse.py',44),
  ('expression -> expression LT expression','expression',3,'p_expression_relop','parse.py',45),
  ('expression -> expression GTE expression','expression',3,'p_expression_relop','parse.py',46),
  ('expression -> expression LTE expression','expression',3,'p_expression_relop','parse.py',47),
  ('expression -> expression EQ expression','expression',3,'p_expression_relop','parse.py',48),
  ('expression -> expression NEQ expression','expression',3,'p_expression_relop','parse.py',49),
  ('expression -> expression & expression','expression',3,'p_expression_relop','parse.py',50),
  ('expression -> expression | expression','expression',3,'p_expression_relop','parse.py',51),
  ('expression -> - expression','expression',2,'p_expression_uminus','parse.py',72),
  ('expression -> ( expression )','expression',3,'p_expression_group','parse.py',77),
  ('expression -> NUMBER','expression',1,'p_expression_number','parse.py',82),
  ('expression -> NAME','expression',1,'p_expression_name','parse.py',87),
]
